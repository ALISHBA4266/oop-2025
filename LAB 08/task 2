#include <iostream>
#include <string>
using namespace std;

class Account;

class Manager {
public:
    void displayAccountInfo(const Account& acc);
    void updateBalance(Account& acc, double amount, string type);
};

class Account {
private:
    string accountNumber;
    double balance;

public:
    Account(string accNum, double bal) {
        accountNumber = accNum;
        balance = bal;
    }

    friend class Manager;
    friend void transferFunds(Account& from, Account& to, double amount);
};

void Manager::displayAccountInfo(const Account& acc) {
    cout << "Account Number: " << acc.accountNumber << endl;
    cout << "Balance: $" << acc.balance << endl;
}

void Manager::updateBalance(Account& acc, double amount, string type) {
    if (type == "deposit") {
        acc.balance += amount;
    } else if (type == "withdraw") {
        if (acc.balance >= amount) {
            acc.balance -= amount;
        } else {
            cout << "Insufficient Balance" << endl;
        }
    }
}

void transferFunds(Account& from, Account& to, double amount) {
    if (from.balance >= amount) {
        from.balance -= amount;
        to.balance += amount;
        cout << "Transfer Successful: $" << amount << endl;
    } else {
        cout << "Transfer Failed: Insufficient Balance" << endl;
    }
}

int main() {
    Account acc1("A123", 5000.0);
    Account acc2("B456", 3000.0);
    Manager mgr;

    mgr.displayAccountInfo(acc1);
    mgr.displayAccountInfo(acc2);

    mgr.updateBalance(acc1, 1000, "deposit");
    mgr.updateBalance(acc2, 500, "withdraw");

    transferFunds(acc1, acc2, 2000);

    mgr.displayAccountInfo(acc1);
    mgr.displayAccountInfo(acc2);

    return 0;
}
